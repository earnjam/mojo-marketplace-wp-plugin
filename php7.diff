diff --git a/inc/performance.php b/inc/performance.php
index b8f62d8..64e7df6 100644
--- a/inc/performance.php
+++ b/inc/performance.php
@@ -48,6 +48,50 @@ function mm_cache_toggle() {
 }
 add_action( 'wp_ajax_mm_cache', 'mm_cache_toggle' );
 
+function mm_php_edge_toggle() {
+if ( isset( $_POST['type'] ) && isset( $_POST['current_status'] ) ) {
+		$defaults = array(
+			'php_edge'  => 'disabled',
+		);
+		$cache_settings = get_option( 'mm_php_edge_settings' );
+		$cache_settings = wp_parse_args( $php_edge_settings, $defaults );
+		$valid_php_edge_names = array(
+			'php_edge',
+		);
+		$valid_status = array(
+			'enabled',
+			'disabled',
+		);
+
+		if ( in_array( $_POST['current_status'], $valid_status ) ) {
+			$new_status = ( 'disabled' == $_POST['current_status'] ) ? 'enabled': 'disabled';
+		} else {
+			$response = array( 'status' => 'error', 'message' => 'Invalid status.' );
+		}
+
+		if ( in_array( $_POST['type'], $valid_php_edge_names ) && ! isset( $response ) ) {
+			if ( 'enabled' == $new_status ) {
+				$response = mm_cache_add( $_POST['type'] );
+			} else {
+				$response = mm_cache_remove( $_POST['type'] );
+			}
+			if ( 'object' != $_POST['type'] && 'success' == $response['status'] ) {
+				save_mod_rewrite_rules();
+			}
+		} else {
+			$response = array( 'status' => 'error', 'message' => 'Invalid cache type.' );
+		}
+
+		if ( 'success' == $response['status'] ) {
+			$php_edge_settings[ $_POST['type'] ] = $new_status;
+			update_option( 'mm_cache_settings', $cache_settings );
+		}
+		echo json_encode( $response );
+	}
+	die;
+}
+add_action( 'wp_ajax_mm_php_edge', 'mm_php_edge_toggle' );
+
 function mm_cache_add( $type = null ) {
 	$cache = array();
 	if ( ! is_dir( WP_CONTENT_DIR . '/mu-plugins' ) ) {
@@ -112,3 +156,46 @@ function mm_cache_remove( $type = null ) {
 	}
 	return $response;
 }
+
+function mm_php_edge_add( $type = null ) {
+	$php7 = array();
+	if ( ! is_dir( WP_CONTENT_DIR . '/mu-plugins' ) ) {
+		mkdir( WP_CONTENT_DIR . '/mu-plugins' );
+	}
+	switch ( $type ) {
+		case 'browser':
+			$cache['code'] = 'https://raw.githubusercontent.com/bluehost/endurance-php-edge/master/endurance-php-edge.php';
+			$cache['location'] = WP_CONTENT_DIR . '/mu-plugins/endurance-php-edge.php';
+			break;
+	}
+	if ( isset( $php_edge['code'] ) && isset( $php_edge['location'] ) ) {
+		$request = wp_remote_get( $php_edge['code'] );
+		if ( ! is_wp_error( $request ) ) {
+			file_put_contents( $php_edge['location'], $request['body'] );
+			if ( file_exists( $php_edge['location'] ) ) {
+				$response = array( 'status' => 'success', 'message' => ucfirst( $type ) . ' php edge updated successfully.' );
+			}
+		}
+	}
+	if ( ! isset( $response ) ) {
+		$response = array( 'status' => 'error', 'message' => 'Unable to add ' . ucfirst( $type ) . ' php edge.' );
+	}
+	return $response;
+}
+function mm_php_edge_remove( $type = null ) {
+	switch ( $type ) {
+		case 'php7':
+			$file = WP_CONTENT_DIR . '/mu-plugins/endurance-php-edge.php';
+			break;
+	}
+	if ( file_exists( $file ) ) {
+		if ( unlink( $file ) ) {
+			$response = array( 'status' => 'success', 'message' => ucfirst( $type ) . ' php edge successfully removed.' );
+		} else {
+			$response = array( 'status' => 'error', 'message' => 'Could not remove php edge.' );
+		}
+	} else {
+		$response = array( 'status' => 'error', 'message' => 'php edge file does not exist.' );
+	}
+	return $response;
+}
diff --git a/pages/mojo-performance.php b/pages/mojo-performance.php
index b19f528..24b7e39 100644
--- a/pages/mojo-performance.php
+++ b/pages/mojo-performance.php
@@ -8,6 +8,7 @@ $defaults = array(
 	'page'    => 'disabled',
 	'browser' => 'disabled',
 	'object'  => 'disabled',
+	'php_edge'  => 'disabled',
 );
 
 if ( file_exists( WP_CONTENT_DIR . '/mu-plugins/endurance-page-cache.php' ) ) {
@@ -18,8 +19,14 @@ if ( file_exists( WP_CONTENT_DIR . '/mu-plugins/endurance-browser-cache.php' ) )
 	$defaults['browser'] = 'enabled';
 }
 
+if ( file_exists( WP_CONTENT_DIR . '/mu-plugins/endurance-php-edge.php' ) ) {
+	$defaults['php_edge'] = 'enabled';
+}
+
 $cache_settings = get_option( 'mm_cache_settings' );
 $cache_settings = wp_parse_args( $cache_settings, $defaults );
+$php_edge_settings = get_option( 'mm_php_edge_settings' );
+$php_edge_settings = wp_parse_args( $php_edge_settings, $defaults );
 ?>
 	<main id="main">
 		<div class="container">
@@ -32,8 +39,8 @@ $cache_settings = wp_parse_args( $cache_settings, $defaults );
 							</ol>
 						</div>
 					</div>
-				</div>
-				<div class="panel-body">
+					</div>
+					<div class="panel-body">
 					<div class="row">
 						<div class="col-xs-12 col-sm-6">
 							Page Cache
@@ -72,6 +79,29 @@ $cache_settings = wp_parse_args( $cache_settings, $defaults );
 							}
 							?>
 						</div>
+						</div>
+					</div>
+					<div class="panel-body">
+					<div class="row">
+						<div class="col-xs-12 col-sm-6">
+							PHP Edge
+							<p style="padding-top: 15px;">
+								<img style="margin: 5px; padding-right: 10px;" class="pull-left" src="<?php echo MM_BASE_URL; ?>tmp/php.png" />
+								Using the PHP edge will improve your WordPress site performance and speed.
+							</p>
+							<br/>
+							<?php
+							if ( 'enabled' == $php_edge_settings['page'] ) {
+								?>
+								<button data-type="php_edge" data-status="enabled" class="mojo-php_edge-toggle btn btn-primary btn-md">Disable</button>
+								<?php
+							} else {
+								?>
+								<button data-type="php_edge" data-status="disabled" class="mojo-php_edge-toggle btn btn-success btn-md">Enable</button>
+								<?php
+							}
+							?>
+						</div>
 					</div>
 				</div>
 			</div>
@@ -122,3 +152,47 @@ jQuery( document ).ready( function( $ ) {
 	} );
 } );
 </script>
+<script type="text/javascript">
+jQuery( document ).ready( function( $ ) {
+	$( '.mojo-php_edge-toggle' ).click( function () {
+		var php_edge_data = {
+			'action'         : 'mm_php_edge',
+			'type'           : $( this ).data( 'type' ) ,
+			'current_status' : $( this ).data( 'status' )
+		}
+		var button = $(this);
+		$.post( ajaxurl, php_edge_data, function( php_edge_response ) {
+			try {
+				response = JSON.parse( php_edge_response );
+			} catch (e) {
+				response = {status:"error", message:"Invalid JSON response."};
+			}
+
+			if ( typeof response.message !== 'undefined' ) {
+				$( '#mojo-wrapper' ).append( '<div id="mm-message" class="mm-' + response.status + '" style="display:none;">' + response.message + '</div>' );
+				$( '#mm-message' ).fadeIn( 'slow', function() {
+					if ( response.status == 'success' ) {
+						if ( button.data( 'status' ) == 'disabled' ) {
+							button.data( 'status', 'enabled' );
+							button.removeClass( 'btn-success' );
+							button.addClass( 'btn-primary' );
+							button.html( 'Disable' );
+						} else {
+							button.data( 'status', 'disabled' );
+							button.removeClass( 'btn-primary' );
+							button.addClass( 'btn-success' );
+							button.html( 'Enable' );
+						}
+					}
+					setTimeout( function() {
+						$( '#mm-message' ).fadeOut( 'fast', function() {
+							$( '#mm-message' ).remove();
+						} );
+					}, 8000 );
+				} );
+			}
+
+		} );
+	} );
+} );
+</script>
